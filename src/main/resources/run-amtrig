#!/bin/sh

# Find the top of the workspace regardless of where this script was
# started from
SCRIPT_DIR=`dirname $0`
START_DIR=`pwd`
REL_PATH_TO_WS="../../.."
WS_DIR=`cd ${START_DIR}/${SCRIPT_DIR}/${REL_PATH_TO_WS} && pwd`

# The local user's maven repository from which the required libs will
# be found
REPO_DIR=${HOME}/.m2/repository

REQ_PROJECTS="trigger \
juggler \
payload \
splicer \
daq-io \
daq-common \
daq-log"

# These are hard-coding version numbers until I can get mvn
# creating/assembling releases in the form of jar files which have
# what is (and only what is) needed.
REQ_LIBS="commons-logging-1.0.3 \
log4j-1.2.7 \
jaxp-ri-1.4 \
jaxp-api-1.4 \
jaxb-xjc-1.0.6 \
jaxb-impl-1.0.6 \
jaxb-libs-1.0.6 \
jaxb-api-1.0 \
jax-qname-1.1 \
relaxngDatatype-20020414 \
xsdlib-20060615 \
xmlrpc-common-3.0 \
xmlrpc-client-3.0 \
xmlrpc-server-3.0 \
icebucket-3.0.2 \
concurrent-1.3.4 \
ws-commons-util-1.0.1 \
jmxtools-1.2.1"

missing_jar=
CLASSPATH=""
for proj in ${REQ_PROJECTS}; do
  jar=${WS_DIR}/${proj}/target/${proj}-${pom.version}.jar
  if [ -f "$jar" ]; then
    CLASSPATH=${jar}:${CLASSPATH}
  else
    echo "$0: Cannot find ${proj} jar file" >&2
    missing_jar=true
  fi
done

for lib in ${REQ_LIBS}; do
  jar=
  for i in `find ${REPO_DIR} -name "${lib}.jar"`; do
    jar="$i"
  done
  if [ -f "$jar" ]; then
    CLASSPATH=$jar:${CLASSPATH}
  else
    echo "$0: Cannot find ${lib} jar file" >&2
    missing_jar=true
  fi
done

if [ ! -z ${missing_jar} ]; then
  exit 1
fi

export CLASSPATH
#echo "CLASSPATH=${CLASSPATH}"
java -Xmx1600m icecube.daq.trigger.component.AmandaTriggerComponent $@
